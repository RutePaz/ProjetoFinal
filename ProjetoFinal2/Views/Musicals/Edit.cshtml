@model TI2PFINAL.Models.Musical

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Musicals", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Musical</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID_Musical)
    @*esta instrução foi aqui adicionada, pois é necessária para garantir que o nome dp poster de um Musical sejaa devidamente entregue ao controller*@

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.Poster)
    <div class="form-group">
        @Html.LabelFor(model => model.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Synopsis, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextAreaFor(model => model.Synopsis, new { rows = "10", cols = "50" })
            @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Director, "", new { @class = "te-daxtnger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OpeningNight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OpeningNight, new { htmlAttributes = new { @class = "form-control", @Value = Model.OpeningNight.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.OpeningNight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ticket, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ticket, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ticket, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*com a adição da opção de efetuar upload de uma imagem, estes objetos não são mais necessários
                @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })*@
            <input type="file" name="uploadPoster" style="color:blue;" accept=".jpg" />
            <a href="~/images/@Model.Poster" target="_blank">
                <img src="~/images/@Model.Poster" style=" height:290px; width:200px; object-fit:cover " />
            </a>

        </div>
    </div>
    @Html.ActionLink("Add Song", "Create", "Soundtracks", new { MusicalFK = Model.ID_Musical }, null)
    @Html.Partial("_MusicalPartial", Model.List_Soundtrack)
    <div class="container" style="height:600px; overflow-y:scroll;">

        @foreach (var character in Model.List_Cast.ToList())
        {
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                    <h4>@character.Character</h4>
                    <img src="~/images/" style="width:200px; height:200px; object-fit:cover;" data-toggle="modal" data-target="#myModal" />
                    @Html.ActionLink("Edit", "Edit", "CastMusicals", new { id = character.ID }, null) |
                    @Html.ActionLink("Delete", "Delete", "CastMusicals", new { id = character.ID }, null)
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                    <h4>@character.Cast.Name</h4>
                    <img src="/images/@character.Cast.Image" style="width:200px; height:200px; object-fit:cover;" data-toggle="modal" data-target="#myModal" />
                </div>
            </div>
            <hr />
        }
    </div>
    @Html.ActionLink("Create Character", "Create", "CastMusicals", new { MusicalFK = Model.ID_Musical }, null)
    <div class="form-group">

        <div class="form-group">
            <diav clss="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </diav>
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    </div>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


    }

